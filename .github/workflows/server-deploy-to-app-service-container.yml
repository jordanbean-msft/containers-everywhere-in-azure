name: Deploy Server Application Container Image to App Service Container

on:
  workflow_run:
    workflows: [Server Container Build and Push to Azure Container Registry]
    types:
      - completed
  workflow_dispatch:
    # inputs:
    #   imageName:
    #     description: Docker image to deploy
    #     required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@main
      - name: Read .env File and Populate Environment Variables
        id: dotenv  
        uses: falti/dotenv-action@v0.2.7
        with:
          path: .github/workflows/${{ secrets.ENVIRONMENT_FILE }}
          log-variables: true
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/arm-deploy@v1
        name: deploy
        with:
          deploymentName: server-deploy-to-app-service-container
          subscriptionId: ${{ steps.dotenv.outputs.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ steps.dotenv.outputs.AZURE_RESOURCE_GROUP }}
          template: infra/compute/appService/server/main.bicep
          parameters: |
            containerRegistryName=${{ steps.dotenv.outputs.CONTAINER_REGISTRY_NAME }} imageName=${{ steps.dotenv.outputs.SERVER_IMAGE_NAME }}:latest storageAccountName=${{ steps.dotenv.outputs.STORAGE_ACCOUNT_NAME }} logAnalyticsWorkspaceName=${{ steps.dotenv.outputs.LOG_ANALYTICS_WORKSPACE_NAME }} appInsightsName=${{ steps.dotenv.outputs.APPLICATION_INSIGHTS_NAME }} appServicePlanName=${{ steps.dotenv.outputs.APP_SERVICE_PLAN_NAME }} appServiceName=${{ steps.dotenv.outputs.SERVER_APP_SERVICE_CONTAINER_NAME }}